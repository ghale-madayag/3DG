import {
  AttributeCommand
} from "./chunk-RU5RYWHM.js";
import {
  ButtonView
} from "./chunk-GVJYUFQW.js";
import {
  Plugin
} from "./chunk-W4RSC2T7.js";
import "./chunk-5NSBEPH7.js";
import "./chunk-ROME4SDB.js";

// node_modules/@ckeditor/ckeditor5-basic-styles/src/italic/italicediting.js
var ITALIC = "italic";
var ItalicEditing = class extends Plugin {
  /**
   * @inheritDoc
   */
  static get pluginName() {
    return "ItalicEditing";
  }
  /**
   * @inheritDoc
   */
  init() {
    const editor = this.editor;
    editor.model.schema.extend("$text", { allowAttributes: ITALIC });
    editor.model.schema.setAttributeProperties(ITALIC, {
      isFormatting: true,
      copyOnEnter: true
    });
    editor.conversion.attributeToElement({
      model: ITALIC,
      view: "i",
      upcastAlso: [
        "em",
        {
          styles: {
            "font-style": "italic"
          }
        }
      ]
    });
    editor.commands.add(ITALIC, new AttributeCommand(editor, ITALIC));
    editor.keystrokes.set("CTRL+I", ITALIC);
  }
};

// node_modules/@ckeditor/ckeditor5-basic-styles/src/italic/italicui.js
import italicIcon from "C:/wamp64/www/3dgwebdev/node_modules/@ckeditor/ckeditor5-basic-styles/theme/icons/italic.svg";
var ITALIC2 = "italic";
var ItalicUI = class extends Plugin {
  /**
   * @inheritDoc
   */
  static get pluginName() {
    return "ItalicUI";
  }
  /**
   * @inheritDoc
   */
  init() {
    const editor = this.editor;
    const t = editor.t;
    editor.ui.componentFactory.add(ITALIC2, (locale) => {
      const command = editor.commands.get(ITALIC2);
      const view = new ButtonView(locale);
      view.set({
        label: t("Italic"),
        icon: italicIcon,
        keystroke: "CTRL+I",
        tooltip: true,
        isToggleable: true
      });
      view.bind("isOn", "isEnabled").to(command, "value", "isEnabled");
      this.listenTo(view, "execute", () => {
        editor.execute(ITALIC2);
        editor.editing.view.focus();
      });
      return view;
    });
  }
};

// node_modules/@ckeditor/ckeditor5-basic-styles/src/italic.js
var Italic = class extends Plugin {
  /**
   * @inheritDoc
   */
  static get requires() {
    return [ItalicEditing, ItalicUI];
  }
  /**
   * @inheritDoc
   */
  static get pluginName() {
    return "Italic";
  }
};
export {
  Italic as default
};
/*! Bundled license information:

@ckeditor/ckeditor5-basic-styles/src/italic/italicediting.js:
  (**
   * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
   * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
   *)

@ckeditor/ckeditor5-basic-styles/src/italic/italicui.js:
  (**
   * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
   * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
   *)

@ckeditor/ckeditor5-basic-styles/src/italic.js:
  (**
   * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
   * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
   *)
*/
//# sourceMappingURL=@ckeditor_ckeditor5-basic-styles_src_italic.js.map
